{"version":3,"sources":["components/Navbar.js","components/Textform.js","Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglekMode","role","htmlFor","Textform","email","setemail","useState","url","seturl","handleOnChange","ev","console","log","setText","target","value","text","Fragment","style","color","heading","backgroundColor","onChange","rows","handleUpClick","newtext","toUpperCase","showAlert","handleLowClick","toLocaleLowerCase","copyToClipboard","copytext","navigator","clipboard","writeText","clearText","Extract_mail","match","ExtractURL","name","cols","href","split","length","Alert","alert","word","lower","toLowerCase","charAt","slice","capitalize","msg","About","mystyle","setmystyle","btnText","setbtnText","aria-labelledby","data-bs-parent","darkmood","App","setmode","setalert","message","setTimeout","Router","document","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2359ccc7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n             className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home\r\n             </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n          </li>\r\n          \r\n       \r\n        </ul>\r\n     \r\n        <div className={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.togglekMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      \r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode </label>\r\n       \r\n      </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = ()=>{\r\n    console.log(\"upper case was click \")\r\n    let newtext = text.toUpperCase();\r\n \r\n    setText(newtext)\r\n    props.showAlert(\"Text Capitalize\" , \"success\")\r\n  \r\n\r\n  }\r\n  const copyToClipboard = ()=>{\r\n    let copytext =text;\r\n    navigator.clipboard.writeText(copytext);\r\n    // alert(\"Text is copy to clipboard is  \")\r\n    props.showAlert(\"Text copped\" , \"success\")\r\n\r\n  \r\n  }\r\n  const clearText = ()=>{\r\n    setText(\"\")\r\n    setemail(\"Your e-mail is\")\r\n    seturl(\"The extracted URL from given Text is:-\")\r\n    props.showAlert(\"Text is cleared\" , \"success\")\r\n    \r\n\r\n  }\r\n\r\n  const [email, setemail]= useState(\"Your e-mail is\");\r\n\r\n  const Extract_mail = ()=>{\r\n\r\n    let  email=text.match(/[\\w\\d.-]+@[\\w\\d.-]+\\.[\\w\\d.-]+/g)\r\n      setemail(email)\r\n      console.log(email)\r\n  }\r\n\r\n  const [url, seturl]= useState(\"The extracted URL from given Text is:-\");\r\n  \r\n   const ExtractURL = ()=>{\r\n    let url;\r\n    url=text.match(/https?:\\/\\/[^\\s]+/)[0] \r\n      \r\n    seturl(url)\r\n    \r\n   \r\n \r\n   \r\n   }\r\n  \r\n  const handleOnChange = (ev)=>{\r\n    console.log(\"On Change \")\r\n    setText(ev.target.value)\r\n \r\n  }\r\n  const handleLowClick = ()=>{\r\n    let newtext = text.toLocaleLowerCase();\r\n    setText(newtext)\r\n    props.showAlert(\"Text Converted to lowercase\" , \"success\")\r\n  }\r\n \r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode === 'dark'?'white':'#042743'}} >\r\n            <h1 >{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            {/* <label for=\"my-Box\" class=\"form-label\">Example textarea</label> */}\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode === 'dark'?'#042743':'white', color: props.mode === 'dark'?'white':'#042743'}} onChange={handleOnChange} id=\"my-Box\"  rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To Uppercase </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert To  LowerCase </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={copyToClipboard}> Copy Text </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={clearText}> Clear Text </button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={ Extract_mail}> Extract e-mail </button>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={ExtractURL}>Extract URL</button>\r\n\r\n    </div>\r\n\r\n     <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'#042743'}}>\r\n          <textarea name=\"\" id=\"\" onChange={handleOnChange} style={{backgroundColor:props.mode === 'dark'?'#042743':'white',color: props.mode === 'dark'?'white':'#042743'}} cols=\"40\"value={email}></textarea>\r\n\r\n          <textarea name=\"\" onChange={handleOnChange} style={{backgroundColor:props.mode === 'dark'?'#042743':'white', color: props.mode === 'dark'?'white':'#042743'}} id=\"\" cols=\"40\" value={url}><a href=\"url\"  >    </a></textarea>\r\n\r\n    </div> \r\n    <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'#042743'}} >\r\n      <h2>Your Text Summary </h2>\r\n      <p>{(text.split(\" \").length)-1  } Words and {text.length} characters</p>\r\n      <p> {0.08 * text.split(\" \").length } Minutes read</p>\r\n      <h2>Preview </h2>\r\n      <p>{text.length>0?text:\"Enter something  to preview it here\"}\r\n      </p>\r\n\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n\r\n\r\n    }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n   <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n   \r\n  </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\nconst [mystyle, setmystyle] = useState(\r\n    {\r\n\r\n        color: 'white',\r\n        backgroundColor: 'black '\r\n    }\r\n  ) \r\n  const [btnText, setbtnText] = useState(\"Enable Dark Mood\")\r\n\r\n const darkmood = ()=>\r\n {\r\n    if (mystyle.color ==='white') {\r\n\r\n        setmystyle({\r\n            color: 'black',\r\n        backgroundColor: 'white '\r\n        })\r\n        setbtnText(\"Enable Dark Mood\")\r\n\r\n\r\n        \r\n    }\r\n    else{\r\n\r\n        setmystyle({\r\n            color: 'white',\r\n            backgroundColor: 'black '\r\n        })\r\n        setbtnText(\"Enable Light Mood\")\r\n    }\r\n       \r\n }\r\n  return (\r\n    <div className='container my-3' style={mystyle}>\r\n        <h1 className='my-3'>About</h1>\r\n                <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" style={mystyle} id=\"headingOne\">\r\n                <button className=\"accordion-button\"style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={mystyle} >\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div  >\r\n            <div className=\"accordion-item\" style={mystyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button  style={mystyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Accordion Item #2\r\n                </button >\r\n                </h2>\r\n                <div style={mystyle} id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div  style={mystyle} className=\"accordion-body\">\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div >\r\n            <div  style={mystyle} className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button style={mystyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <button type=\"button\" onClick={darkmood} className=\"btn btn-primary my-3\">{btnText}</button>\r\n\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useState }  from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './Alert';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\n\n// import About from './components/About';\n\nfunction App() {\nconst [mode, setmode ] =useState('light');// whether dark mood is enable is or not \nconst [alert, setalert ] =useState(null);// whether dark mood is enable is or not \n\nconst showAlert=  (message , type)=>{\n   setalert({\n    msg: message,\n    type: type \n   })\n   setTimeout(() => {\n    setalert(null)\n    \n   },1000);\n\n}\n\nconst togglekMode= ()=>{\n  if (mode === \"light\") {\n    setmode(\"dark\")\n    document.body.style.backgroundColor='#042743'\n    showAlert(\"Dark moode has been enabled\" , \"success\")\n  }\n  else{\n    setmode(\"light\")\n    document.body.style.backgroundColor='white'\n    showAlert(\"Light moode has been enabled\" , \"warning\")\n  }\n  \n}\n  return (\n<>\n       \n      <Router>\n \n      <Navbar title = \"TextUtils\" mode= {mode} togglekMode={togglekMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\" >\n\n      <Routes>\n        <Route exact path=\"/\" element={  <Textform  showAlert= {showAlert} heading =\"Enter the text to analyze below\"  mode={mode} />}>\n  \n        </Route>\n\n        <Route  exact  path=\"/about\" element={<About />}>\n      \n        </Route>\n      </Routes>\n      </div>\n          </Router>\n       \n     \n\n      </>\n        \n    \n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}